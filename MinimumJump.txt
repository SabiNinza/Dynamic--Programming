#include <iostream>
using namespace std;
#include<bits/stdc++.h>
#define ll long
//throught recursion
ll MinimumJump(ll *arr,ll s,ll e){
 if(s==e-1) return 0;
  if(arr[s]==0) return INT_MAX;
  ll min=INT_MAX;
  for(int i=s+1;(i<=(s+arr[s]))&&(i<e);i++){
      ll j=MinimumJump(arr,i,e);
      if((j!=INT_MAX) && (j+1<min)){
          min=j+1;
      }
  }
  return min;
}
//throught 2d array
ll MinimumJump_dp(ll *arr,ll n){
    ll dp[5600];
    memset(dp,0,sizeof(dp));
    dp[0]=0;
    for(int i=1;i<n;i++){
      dp[i]=INT_MAX;
      for(int j=0;j<i;j++){
          if(i<=j+arr[j]&&dp[j]!=INT_MAX){
              dp[i]=min(dp[i],dp[j]+1);
              break;
          }
      }
    }
    return dp[n-1];
}
int main() {
    int n;
    cin>>n;
    ll arr[n];
    for(int i=0;i<n;i++) cin>>arr[i];
    cout<<MinimumJump_dp(arr,n)<<endl;
}
