#include <iostream>
#include<climits>
using namespace std;
#define ll long long
ll dp[1000][1000];
int a[1000];
ll sum(int s,int e){
  ll ans=0;
  for(int k=s;k<=e;k++){
      ans+=a[k];
      ans%=100;
  }
  return ans;
}
ll SolveMixture(int i,int j){
//base case
if(i>=j) return 0;
//already exist
if(dp[i][j]!=-1) return dp[i][j];
//break every possible value of k
dp[i][j]=INT_MAX;
for(int k=i;k<=j;k++){
    dp[i][j]=min(dp[i][j],SolveMixture(i,k)+SolveMixture(k+1,j)+sum(i,k)*sum(k+1,j));
    }
    return dp[i][j];
}
int main() {
    int n;
    while(scanf("%d",&n)!=EOF){
        for(int i=0;i<n;i++){
            cin>>a[i];
        }
        //initiate the dp with -1;
        for(int i=0;i<=n;i++){
            for(int j=0;j<=n;j++){
                dp[i][j]=-1;
            }
        }
        cout<<SolveMixture(0,n)<<endl;
    }
}
