#include <iostream>
#include<cstring>
using namespace std;
#define ll long long
ll dp[2005][2005][8];
ll n,m;
ll a[2005],b[2005];
ll KLCS(int i,int j,int k){
   //base case
   if(i>=n||j>=m) return 0;
   if(dp[i][j][k]!=-1) return dp[i][j][k];
   ll res=0;
   if(a[i]==b[j]) {
      res=1+KLCS(i+1,j+1,k);
   }
   else{
       if(k>0){
         res=1+KLCS(i+1,k+1,k-1);
       }
   res=max(res,KLCS(i+1,j,k));
   res=max(res,KLCS(i,j+1,k));
   }
   return dp[i][j][k]=res;
}
//  #include <bits/stdc++.h>
//  #include<stdio.h>
//     using namespace std;
//     #define F(i,a,b) for(ll i = a; i <= b; i++)
//     #define ll long long  
//     ll n,m,a[2005],b[2005];
//     ll dp[2005][2005][8];
     
//     ll f(ll i,ll j,ll k)
//     {
//     	if(i >= n || j >= m)
//     		return 0;
//     	if(dp[i][j][k] != -1)
//     		return dp[i][j][k];
//     	ll res = 0;
    	
//     	if(a[i] == b[j])
//     		res = 1 + f(i+1,j+1,k);
//     	else 
//     	{
//     		if(k > 0)
//     			res = 1 + f(i+1,j+1,k-1);
//     		res = max(res,f(i+1,j,k));
//     		res = max(res,f(i,j+1,k));
//     	}
//     	return dp[i][j][k] = res;
//     }
//     int main() 
//     {	
//     	memset(dp,-1,sizeof(dp));
//     	ll k;
//     	cin>>n>>m>>k;
//         	F(i,0,n-1)
//     		cin>>a[i];	
//     	F(i,0,m-1)
//     		cin>>b[i];
//     	ll ans = f(0,0,k);
//     	cout<<ans<<endl;
//     	return 0;
//     }
int main() {
    memset(dp,-1,sizeof(dp));
    cin>>n>>m;
    ll k;
    cin>>k;
    for(ll i=0;i<n;i++) cin>>a[i];
    for(ll i=0;i<m;i++) cin>>b[i];
    cout<<KLCS(0,0,k)<<endl;
}
