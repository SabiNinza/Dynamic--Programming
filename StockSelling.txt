#include <iostream>
#include<bits/stdc++.h>
using namespace std;
int StockSelling(int *Price,int n,int k){
    int dp[k+1][n];
    memset(dp,0,sizeof(dp));
    for(int t=1;t<=k;t++){
    for(int i=1;i<n;i++){
         //if there is no transaction
            dp[t][i]=dp[t][i-1];
            int max1=INT_MIN;
        for(int j=0;j<i;j++){
            //if there is transaction
           max1=max(max1, Price[i]-Price[j]+dp[t-1][j]);
        }
        dp[t][i]=max(dp[t][i-1],max1);
    }
    }
    return dp[k][n-1];
}
int main() {
    int t;
    cin>>t;
    while(t--){
        int k,n;
        cin>>k>>n;
        int Price[n];
        for(int i=0;i<n;i++) cin>>Price[i];
        cout<<StockSelling(Price,n,k)<<endl;
    }
}
