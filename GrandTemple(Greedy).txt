#include <iostream>
#include<bits/stdc++.h>
#include<vector>
using namespace std;
#define ll long long
 bool cmp(pair<ll,ll> &a,pair<ll,ll> &b){
     return a.first<b.first;
};
 bool cmp1(pair<ll,ll> &a,pair<ll,ll> &b){
     return a.second<b.second;
 }
ll Max_GrandTemple(vector<pair<ll,ll>> &Points,ll n){
        //find difference b/w x point and choose the max diff in dx
        ll diff_x=INT_MIN,diff_y=INT_MIN;
        ll arr[n]={0};
        //sort on the basis of x coordinate
        sort(Points.begin(),Points.end(),cmp);
        for(int i=0;i<n;i++){
         if(i==0) {
             arr[i]=Points[i].first;
             continue;
         }
            arr[i]=Points[i].first-Points[i-1].first-1;
            diff_x=max(diff_x,arr[i]);
        }
       sort(Points.begin(),Points.end(),cmp1);
        //   for(int i=0;i<n;i++){
        //     cout<<Points[i].first<<" "<<Points[i].second<<endl;
        // }
        for(int i=0;i<n;i++){
            if(i==0){
               arr[i]=Points[i].second;
               continue;
            }
            arr[i]=Points[i].second-Points[i-1].second-1;
            diff_y=max(diff_y,arr[i]);
                       // cout<<arr[i]<<"-->"<<Points[i].second<<" "<<Points[i-1].second<<endl;
        }
    return diff_x*diff_y;
}
int main() {
    ll n;
    cin>>n;
    vector<pair<ll,ll>> Point;
    for(int i=0;i<n;i++){
        ll a,b;
        cin>>a>>b;
        Point.push_back(make_pair(a,b));
    }
    cout<<Max_GrandTemple(Point,n)<<endl;
}
